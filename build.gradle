plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        // use meteor's baritone fork
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        name = "modrinth"
        url = "https://api.modrinth.com/maven"
        
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "terraformersmc"
        url = "https://maven.terraformersmc.com/releases/"
    }
}

configurations {
    modImplementation.extendsFrom(modInclude)
    include.extendsFrom(modInclude)
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    
    modCompileOnly("maven.modrinth:sodium:${project.sodium_version}") { transitive = false }
    modCompileOnly("maven.modrinth:continuity:${project.continuity_version}") { transitive = false }
    modCompileOnly("meteordevelopment:baritone:${project.baritone_version}-SNAPSHOT") { transitive = false }
    modCompileOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") { transitive = false }
    modCompileOnly("maven.modrinth:moreculling:${project.more_culling_version}") { transitive = false }

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompileOnly("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
